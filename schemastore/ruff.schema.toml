allowed-confusables = [ "string = { min-len = 1, max-len = 1 }" ]
analyze = "ref = 'defs.AnalyzeOptions'"
builtins = [ "string" ]
cache-dir = "string"
dummy-variable-rgx = "string"
exclude = [ "string" ]
explicit-preview-rules = "boolean"
extend = "string"
extend-exclude = [ "string" ]
extend-fixable = [ "ref = 'defs.RuleSelector'" ]
extend-ignore = [ "ref = 'defs.RuleSelector'" ]
extend-include = [ "string" ]
extend-safe-fixes = [ "ref = 'defs.RuleSelector'" ]
extend-select = [ "ref = 'defs.RuleSelector'" ]
extend-unfixable = [ "ref = 'defs.RuleSelector'" ]
extend-unsafe-fixes = [ "ref = 'defs.RuleSelector'" ]
external = [ "string" ]
fix = "boolean"
fix-only = "boolean"
fixable = [ "ref = 'defs.RuleSelector'" ]
flake8-annotations = "ref = 'defs.Flake8AnnotationsOptions'"
flake8-bandit = "ref = 'defs.Flake8BanditOptions'"
flake8-boolean-trap = "ref = 'defs.Flake8BooleanTrapOptions'"
flake8-bugbear = "ref = 'defs.Flake8BugbearOptions'"
flake8-builtins = "ref = 'defs.Flake8BuiltinsOptions'"
flake8-comprehensions = "ref = 'defs.Flake8ComprehensionsOptions'"
flake8-copyright = "ref = 'defs.Flake8CopyrightOptions'"
flake8-errmsg = "ref = 'defs.Flake8ErrMsgOptions'"
flake8-gettext = "ref = 'defs.Flake8GetTextOptions'"
flake8-implicit-str-concat = "ref = 'defs.Flake8ImplicitStrConcatOptions'"
flake8-import-conventions = "ref = 'defs.Flake8ImportConventionsOptions'"
flake8-pytest-style = "ref = 'defs.Flake8PytestStyleOptions'"
flake8-quotes = "ref = 'defs.Flake8QuotesOptions'"
flake8-self = "ref = 'defs.Flake8SelfOptions'"
flake8-tidy-imports = "ref = 'defs.Flake8TidyImportsOptions'"
flake8-type-checking = "ref = 'defs.Flake8TypeCheckingOptions'"
flake8-unused-arguments = "ref = 'defs.Flake8UnusedArgumentsOptions'"
force-exclude = "boolean"
format = "ref = 'defs.FormatOptions'"
ignore = [ "ref = 'defs.RuleSelector'" ]
ignore-init-module-imports = "boolean"
include = [ "string" ]
indent-width = "ref = 'defs.IndentWidth'"
isort = "ref = 'defs.IsortOptions'"
line-length = "ref = 'defs.LineLength'"
lint = "ref = 'defs.LintOptions'"
logger-objects = [ "string" ]
mccabe = "ref = 'defs.McCabeOptions'"
namespace-packages = [ "string" ]
output-format = "ref = 'defs.OutputFormat'"
pep8-naming = "ref = 'defs.Pep8NamingOptions'"
preview = "boolean"
pycodestyle = "ref = 'defs.PycodestyleOptions'"
pydocstyle = "ref = 'defs.PydocstyleOptions'"
pyflakes = "ref = 'defs.PyflakesOptions'"
pylint = "ref = 'defs.PylintOptions'"
pyupgrade = "ref = 'defs.PyUpgradeOptions'"
required-version = "ref = 'defs.RequiredVersion'"
respect-gitignore = "boolean"
select = [ "ref = 'defs.RuleSelector'" ]
show-fixes = "boolean"
src = [ "string" ]
target-version = "ref = 'defs.PythonVersion'"
task-tags = [ "string" ]
typing-modules = [ "string" ]
unfixable = [ "ref = 'defs.RuleSelector'" ]
unsafe-fixes = "boolean"

[extend-per-file-ignores]
"*" = [ "ref = 'defs.RuleSelector'" ]

[per-file-ignores]
"*" = [ "ref = 'defs.RuleSelector'" ]

[per-file-target-version]
"*" = "ref = 'defs.PythonVersion'"

["defs = { hidden = true }"]
Alias = "string"
BannedAliases = [ "string" ]
ConstantType = """enum = [
    "bytes",
    "complex",
    "float",
    "int",
    "str",
]"""
Convention = { union = [
    """enum = [
    "google",
]""",
    """enum = [
    "numpy",
]""",
    """enum = [
    "pep257",
]""",
] }
Direction = { union = [
    """enum = [
    "Dependencies",
]""",
    """enum = [
    "Dependents",
]""",
] }
DocstringCodeLineWidth = { union = [
    "ref = 'defs.LineWidth'",
    "enum = [ 'dynamic' ]",
] }
ImportSection = { union = [
    "ref = 'defs.ImportType'",
    "string",
] }
ImportType = """enum = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]"""
IndentStyle = { union = [
    """enum = [
    "tab",
]""",
    """enum = [
    "space",
]""",
] }
IndentWidth = "integer = { min = 1, max = 255 }"
LineEnding = { union = [
    """enum = [
    "auto",
]""",
    """enum = [
    "lf",
]""",
    """enum = [
    "cr-lf",
]""",
    """enum = [
    "native",
]""",
] }
LineLength = "integer = { min = 1, max = 320 }"
LineWidth = "integer = { min = 1, max = 65535 }"
NameImports = "string"
OutputFormat = """enum = [
    "concise",
    "full",
    "json",
    "json-lines",
    "junit",
    "grouped",
    "github",
    "gitlab",
    "pylint",
    "rdjson",
    "azure",
    "sarif",
]"""
ParametrizeNameType = """enum = [
    "csv",
    "tuple",
    "list",
]"""
ParametrizeValuesRowType = """enum = [
    "tuple",
    "list",
]"""
ParametrizeValuesType = """enum = [
    "tuple",
    "list",
]"""
PythonVersion = """enum = [
    "py37",
    "py38",
    "py39",
    "py310",
    "py311",
    "py312",
    "py313",
]"""
Quote = { union = [
    """enum = [
    "double",
]""",
    """enum = [
    "single",
]""",
] }
QuoteStyle = """enum = [
    "single",
    "double",
    "preserve",
]"""
RelativeImportsOrder = { union = [
    """enum = [
    "closest-to-furthest",
]""",
    """enum = [
    "furthest-to-closest",
]""",
] }
RequiredVersion = "string"
RuleSelector = """enum = [
    "A",
    "A0",
    "A00",
    "A001",
    "A002",
    "A003",
    "A004",
    "A005",
    "A006",
    "AIR",
    "AIR0",
    "AIR00",
    "AIR001",
    "AIR002",
    "AIR3",
    "AIR30",
    "AIR301",
    "AIR302",
    "AIR31",
    "AIR311",
    "AIR312",
    "ALL",
    "ANN",
    "ANN0",
    "ANN00",
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN2",
    "ANN20",
    "ANN201",
    "ANN202",
    "ANN204",
    "ANN205",
    "ANN206",
    "ANN4",
    "ANN40",
    "ANN401",
    "ARG",
    "ARG0",
    "ARG00",
    "ARG001",
    "ARG002",
    "ARG003",
    "ARG004",
    "ARG005",
    "ASYNC",
    "ASYNC1",
    "ASYNC10",
    "ASYNC100",
    "ASYNC105",
    "ASYNC109",
    "ASYNC11",
    "ASYNC110",
    "ASYNC115",
    "ASYNC116",
    "ASYNC2",
    "ASYNC21",
    "ASYNC210",
    "ASYNC22",
    "ASYNC220",
    "ASYNC221",
    "ASYNC222",
    "ASYNC23",
    "ASYNC230",
    "ASYNC25",
    "ASYNC251",
    "B",
    "B0",
    "B00",
    "B002",
    "B003",
    "B004",
    "B005",
    "B006",
    "B007",
    "B008",
    "B009",
    "B01",
    "B010",
    "B011",
    "B012",
    "B013",
    "B014",
    "B015",
    "B016",
    "B017",
    "B018",
    "B019",
    "B02",
    "B020",
    "B021",
    "B022",
    "B023",
    "B024",
    "B025",
    "B026",
    "B027",
    "B028",
    "B029",
    "B03",
    "B030",
    "B031",
    "B032",
    "B033",
    "B034",
    "B035",
    "B039",
    "B9",
    "B90",
    "B901",
    "B903",
    "B904",
    "B905",
    "B909",
    "B91",
    "B911",
    "BLE",
    "BLE0",
    "BLE00",
    "BLE001",
    "C",
    "C4",
    "C40",
    "C400",
    "C401",
    "C402",
    "C403",
    "C404",
    "C405",
    "C406",
    "C408",
    "C409",
    "C41",
    "C410",
    "C411",
    "C413",
    "C414",
    "C415",
    "C416",
    "C417",
    "C418",
    "C419",
    "C42",
    "C420",
    "C9",
    "C90",
    "C901",
    "COM",
    "COM8",
    "COM81",
    "COM812",
    "COM818",
    "COM819",
    "CPY",
    "CPY0",
    "CPY00",
    "CPY001",
    "D",
    "D1",
    "D10",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D2",
    "D20",
    "D200",
    "D201",
    "D202",
    "D203",
    "D204",
    "D205",
    "D206",
    "D207",
    "D208",
    "D209",
    "D21",
    "D210",
    "D211",
    "D212",
    "D213",
    "D214",
    "D215",
    "D3",
    "D30",
    "D300",
    "D301",
    "D4",
    "D40",
    "D400",
    "D401",
    "D402",
    "D403",
    "D404",
    "D405",
    "D406",
    "D407",
    "D408",
    "D409",
    "D41",
    "D410",
    "D411",
    "D412",
    "D413",
    "D414",
    "D415",
    "D416",
    "D417",
    "D418",
    "D419",
    "DJ",
    "DJ0",
    "DJ00",
    "DJ001",
    "DJ003",
    "DJ006",
    "DJ007",
    "DJ008",
    "DJ01",
    "DJ012",
    "DJ013",
    "DOC",
    "DOC2",
    "DOC20",
    "DOC201",
    "DOC202",
    "DOC4",
    "DOC40",
    "DOC402",
    "DOC403",
    "DOC5",
    "DOC50",
    "DOC501",
    "DOC502",
    "DTZ",
    "DTZ0",
    "DTZ00",
    "DTZ001",
    "DTZ002",
    "DTZ003",
    "DTZ004",
    "DTZ005",
    "DTZ006",
    "DTZ007",
    "DTZ01",
    "DTZ011",
    "DTZ012",
    "DTZ9",
    "DTZ90",
    "DTZ901",
    "E",
    "E1",
    "E10",
    "E101",
    "E11",
    "E111",
    "E112",
    "E113",
    "E114",
    "E115",
    "E116",
    "E117",
    "E2",
    "E20",
    "E201",
    "E202",
    "E203",
    "E204",
    "E21",
    "E211",
    "E22",
    "E221",
    "E222",
    "E223",
    "E224",
    "E225",
    "E226",
    "E227",
    "E228",
    "E23",
    "E231",
    "E24",
    "E241",
    "E242",
    "E25",
    "E251",
    "E252",
    "E26",
    "E261",
    "E262",
    "E265",
    "E266",
    "E27",
    "E271",
    "E272",
    "E273",
    "E274",
    "E275",
    "E3",
    "E30",
    "E301",
    "E302",
    "E303",
    "E304",
    "E305",
    "E306",
    "E4",
    "E40",
    "E401",
    "E402",
    "E5",
    "E50",
    "E501",
    "E502",
    "E7",
    "E70",
    "E701",
    "E702",
    "E703",
    "E71",
    "E711",
    "E712",
    "E713",
    "E714",
    "E72",
    "E721",
    "E722",
    "E73",
    "E731",
    "E74",
    "E741",
    "E742",
    "E743",
    "E9",
    "E90",
    "E902",
    "EM",
    "EM1",
    "EM10",
    "EM101",
    "EM102",
    "EM103",
    "ERA",
    "ERA0",
    "ERA00",
    "ERA001",
    "EXE",
    "EXE0",
    "EXE00",
    "EXE001",
    "EXE002",
    "EXE003",
    "EXE004",
    "EXE005",
    "F",
    "F4",
    "F40",
    "F401",
    "F402",
    "F403",
    "F404",
    "F405",
    "F406",
    "F407",
    "F5",
    "F50",
    "F501",
    "F502",
    "F503",
    "F504",
    "F505",
    "F506",
    "F507",
    "F508",
    "F509",
    "F52",
    "F521",
    "F522",
    "F523",
    "F524",
    "F525",
    "F54",
    "F541",
    "F6",
    "F60",
    "F601",
    "F602",
    "F62",
    "F621",
    "F622",
    "F63",
    "F631",
    "F632",
    "F633",
    "F634",
    "F7",
    "F70",
    "F701",
    "F702",
    "F704",
    "F706",
    "F707",
    "F72",
    "F722",
    "F8",
    "F81",
    "F811",
    "F82",
    "F821",
    "F822",
    "F823",
    "F84",
    "F841",
    "F842",
    "F9",
    "F90",
    "F901",
    "FA",
    "FA1",
    "FA10",
    "FA100",
    "FA102",
    "FAST",
    "FAST0",
    "FAST00",
    "FAST001",
    "FAST002",
    "FAST003",
    "FBT",
    "FBT0",
    "FBT00",
    "FBT001",
    "FBT002",
    "FBT003",
    "FIX",
    "FIX0",
    "FIX00",
    "FIX001",
    "FIX002",
    "FIX003",
    "FIX004",
    "FLY",
    "FLY0",
    "FLY00",
    "FLY002",
    "FURB",
    "FURB1",
    "FURB10",
    "FURB101",
    "FURB103",
    "FURB105",
    "FURB11",
    "FURB110",
    "FURB113",
    "FURB116",
    "FURB118",
    "FURB12",
    "FURB122",
    "FURB129",
    "FURB13",
    "FURB131",
    "FURB132",
    "FURB136",
    "FURB14",
    "FURB140",
    "FURB142",
    "FURB145",
    "FURB148",
    "FURB15",
    "FURB152",
    "FURB154",
    "FURB156",
    "FURB157",
    "FURB16",
    "FURB161",
    "FURB162",
    "FURB163",
    "FURB164",
    "FURB166",
    "FURB167",
    "FURB168",
    "FURB169",
    "FURB17",
    "FURB171",
    "FURB177",
    "FURB18",
    "FURB180",
    "FURB181",
    "FURB187",
    "FURB188",
    "FURB189",
    "FURB19",
    "FURB192",
    "G",
    "G0",
    "G00",
    "G001",
    "G002",
    "G003",
    "G004",
    "G01",
    "G010",
    "G1",
    "G10",
    "G101",
    "G2",
    "G20",
    "G201",
    "G202",
    "I",
    "I0",
    "I00",
    "I001",
    "I002",
    "ICN",
    "ICN0",
    "ICN00",
    "ICN001",
    "ICN002",
    "ICN003",
    "INP",
    "INP0",
    "INP00",
    "INP001",
    "INT",
    "INT0",
    "INT00",
    "INT001",
    "INT002",
    "INT003",
    "ISC",
    "ISC0",
    "ISC00",
    "ISC001",
    "ISC002",
    "ISC003",
    "LOG",
    "LOG0",
    "LOG00",
    "LOG001",
    "LOG002",
    "LOG004",
    "LOG007",
    "LOG009",
    "LOG01",
    "LOG014",
    "LOG015",
    "N",
    "N8",
    "N80",
    "N801",
    "N802",
    "N803",
    "N804",
    "N805",
    "N806",
    "N807",
    "N81",
    "N811",
    "N812",
    "N813",
    "N814",
    "N815",
    "N816",
    "N817",
    "N818",
    "N9",
    "N99",
    "N999",
    "NPY",
    "NPY0",
    "NPY00",
    "NPY001",
    "NPY002",
    "NPY003",
    "NPY2",
    "NPY20",
    "NPY201",
    "PD",
    "PD0",
    "PD00",
    "PD002",
    "PD003",
    "PD004",
    "PD007",
    "PD008",
    "PD009",
    "PD01",
    "PD010",
    "PD011",
    "PD012",
    "PD013",
    "PD015",
    "PD1",
    "PD10",
    "PD101",
    "PD9",
    "PD90",
    "PD901",
    "PERF",
    "PERF1",
    "PERF10",
    "PERF101",
    "PERF102",
    "PERF2",
    "PERF20",
    "PERF203",
    "PERF4",
    "PERF40",
    "PERF401",
    "PERF402",
    "PERF403",
    "PGH",
    "PGH0",
    "PGH00",
    "PGH003",
    "PGH004",
    "PGH005",
    "PIE",
    "PIE7",
    "PIE79",
    "PIE790",
    "PIE794",
    "PIE796",
    "PIE8",
    "PIE80",
    "PIE800",
    "PIE804",
    "PIE807",
    "PIE808",
    "PIE81",
    "PIE810",
    "PL",
    "PLC",
    "PLC0",
    "PLC01",
    "PLC010",
    "PLC0105",
    "PLC013",
    "PLC0131",
    "PLC0132",
    "PLC02",
    "PLC020",
    "PLC0205",
    "PLC0206",
    "PLC0208",
    "PLC04",
    "PLC041",
    "PLC0414",
    "PLC0415",
    "PLC1",
    "PLC18",
    "PLC180",
    "PLC1802",
    "PLC19",
    "PLC190",
    "PLC1901",
    "PLC2",
    "PLC24",
    "PLC240",
    "PLC2401",
    "PLC2403",
    "PLC27",
    "PLC270",
    "PLC2701",
    "PLC28",
    "PLC280",
    "PLC2801",
    "PLC3",
    "PLC30",
    "PLC300",
    "PLC3002",
    "PLE",
    "PLE0",
    "PLE01",
    "PLE010",
    "PLE0100",
    "PLE0101",
    "PLE011",
    "PLE0115",
    "PLE0116",
    "PLE0117",
    "PLE0118",
    "PLE02",
    "PLE023",
    "PLE0237",
    "PLE024",
    "PLE0241",
    "PLE03",
    "PLE030",
    "PLE0302",
    "PLE0303",
    "PLE0304",
    "PLE0305",
    "PLE0307",
    "PLE0308",
    "PLE0309",
    "PLE06",
    "PLE060",
    "PLE0604",
    "PLE0605",
    "PLE064",
    "PLE0643",
    "PLE07",
    "PLE070",
    "PLE0704",
    "PLE1",
    "PLE11",
    "PLE113",
    "PLE1132",
    "PLE114",
    "PLE1141",
    "PLE1142",
    "PLE12",
    "PLE120",
    "PLE1205",
    "PLE1206",
    "PLE13",
    "PLE130",
    "PLE1300",
    "PLE1307",
    "PLE131",
    "PLE1310",
    "PLE15",
    "PLE150",
    "PLE1507",
    "PLE151",
    "PLE1519",
    "PLE152",
    "PLE1520",
    "PLE17",
    "PLE170",
    "PLE1700",
    "PLE2",
    "PLE25",
    "PLE250",
    "PLE2502",
    "PLE251",
    "PLE2510",
    "PLE2512",
    "PLE2513",
    "PLE2514",
    "PLE2515",
    "PLE4",
    "PLE47",
    "PLE470",
    "PLE4703",
    "PLR",
    "PLR0",
    "PLR01",
    "PLR012",
    "PLR0124",
    "PLR013",
    "PLR0133",
    "PLR02",
    "PLR020",
    "PLR0202",
    "PLR0203",
    "PLR0206",
    "PLR04",
    "PLR040",
    "PLR0402",
    "PLR09",
    "PLR090",
    "PLR0904",
    "PLR091",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0914",
    "PLR0915",
    "PLR0916",
    "PLR0917",
    "PLR1",
    "PLR17",
    "PLR170",
    "PLR1702",
    "PLR1704",
    "PLR171",
    "PLR1711",
    "PLR1714",
    "PLR1716",
    "PLR172",
    "PLR1722",
    "PLR173",
    "PLR1730",
    "PLR1733",
    "PLR1736",
    "PLR2",
    "PLR20",
    "PLR200",
    "PLR2004",
    "PLR204",
    "PLR2044",
    "PLR5",
    "PLR55",
    "PLR550",
    "PLR5501",
    "PLR6",
    "PLR61",
    "PLR610",
    "PLR6104",
    "PLR62",
    "PLR620",
    "PLR6201",
    "PLR63",
    "PLR630",
    "PLR6301",
    "PLW",
    "PLW0",
    "PLW01",
    "PLW010",
    "PLW0108",
    "PLW012",
    "PLW0120",
    "PLW0127",
    "PLW0128",
    "PLW0129",
    "PLW013",
    "PLW0131",
    "PLW0133",
    "PLW017",
    "PLW0177",
    "PLW02",
    "PLW021",
    "PLW0211",
    "PLW024",
    "PLW0244",
    "PLW0245",
    "PLW04",
    "PLW040",
    "PLW0406",
    "PLW06",
    "PLW060",
    "PLW0602",
    "PLW0603",
    "PLW0604",
    "PLW064",
    "PLW0642",
    "PLW07",
    "PLW071",
    "PLW0711",
    "PLW1",
    "PLW15",
    "PLW150",
    "PLW1501",
    "PLW1507",
    "PLW1508",
    "PLW1509",
    "PLW151",
    "PLW1510",
    "PLW1514",
    "PLW16",
    "PLW164",
    "PLW1641",
    "PLW2",
    "PLW21",
    "PLW210",
    "PLW2101",
    "PLW29",
    "PLW290",
    "PLW2901",
    "PLW3",
    "PLW32",
    "PLW320",
    "PLW3201",
    "PLW33",
    "PLW330",
    "PLW3301",
    "PT",
    "PT0",
    "PT00",
    "PT001",
    "PT002",
    "PT003",
    "PT006",
    "PT007",
    "PT008",
    "PT009",
    "PT01",
    "PT010",
    "PT011",
    "PT012",
    "PT013",
    "PT014",
    "PT015",
    "PT016",
    "PT017",
    "PT018",
    "PT019",
    "PT02",
    "PT020",
    "PT021",
    "PT022",
    "PT023",
    "PT024",
    "PT025",
    "PT026",
    "PT027",
    "PT028",
    "PT029",
    "PT03",
    "PT030",
    "PT031",
    "PTH",
    "PTH1",
    "PTH10",
    "PTH100",
    "PTH101",
    "PTH102",
    "PTH103",
    "PTH104",
    "PTH105",
    "PTH106",
    "PTH107",
    "PTH108",
    "PTH109",
    "PTH11",
    "PTH110",
    "PTH111",
    "PTH112",
    "PTH113",
    "PTH114",
    "PTH115",
    "PTH116",
    "PTH117",
    "PTH118",
    "PTH119",
    "PTH12",
    "PTH120",
    "PTH121",
    "PTH122",
    "PTH123",
    "PTH124",
    "PTH2",
    "PTH20",
    "PTH201",
    "PTH202",
    "PTH203",
    "PTH204",
    "PTH205",
    "PTH206",
    "PTH207",
    "PTH208",
    "PTH21",
    "PTH210",
    "PYI",
    "PYI0",
    "PYI00",
    "PYI001",
    "PYI002",
    "PYI003",
    "PYI004",
    "PYI005",
    "PYI006",
    "PYI007",
    "PYI008",
    "PYI009",
    "PYI01",
    "PYI010",
    "PYI011",
    "PYI012",
    "PYI013",
    "PYI014",
    "PYI015",
    "PYI016",
    "PYI017",
    "PYI018",
    "PYI019",
    "PYI02",
    "PYI020",
    "PYI021",
    "PYI024",
    "PYI025",
    "PYI026",
    "PYI029",
    "PYI03",
    "PYI030",
    "PYI032",
    "PYI033",
    "PYI034",
    "PYI035",
    "PYI036",
    "PYI04",
    "PYI041",
    "PYI042",
    "PYI043",
    "PYI044",
    "PYI045",
    "PYI046",
    "PYI047",
    "PYI048",
    "PYI049",
    "PYI05",
    "PYI050",
    "PYI051",
    "PYI052",
    "PYI053",
    "PYI054",
    "PYI055",
    "PYI056",
    "PYI057",
    "PYI058",
    "PYI059",
    "PYI06",
    "PYI061",
    "PYI062",
    "PYI063",
    "PYI064",
    "PYI066",
    "Q",
    "Q0",
    "Q00",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "Q004",
    "RET",
    "RET5",
    "RET50",
    "RET501",
    "RET502",
    "RET503",
    "RET504",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "RSE",
    "RSE1",
    "RSE10",
    "RSE102",
    "RUF",
    "RUF0",
    "RUF00",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF005",
    "RUF006",
    "RUF007",
    "RUF008",
    "RUF009",
    "RUF01",
    "RUF010",
    "RUF012",
    "RUF013",
    "RUF015",
    "RUF016",
    "RUF017",
    "RUF018",
    "RUF019",
    "RUF02",
    "RUF020",
    "RUF021",
    "RUF022",
    "RUF023",
    "RUF024",
    "RUF026",
    "RUF027",
    "RUF028",
    "RUF029",
    "RUF03",
    "RUF030",
    "RUF031",
    "RUF032",
    "RUF033",
    "RUF034",
    "RUF036",
    "RUF037",
    "RUF038",
    "RUF039",
    "RUF04",
    "RUF040",
    "RUF041",
    "RUF043",
    "RUF045",
    "RUF046",
    "RUF047",
    "RUF048",
    "RUF049",
    "RUF05",
    "RUF051",
    "RUF052",
    "RUF053",
    "RUF054",
    "RUF055",
    "RUF056",
    "RUF057",
    "RUF058",
    "RUF059",
    "RUF1",
    "RUF10",
    "RUF100",
    "RUF101",
    "RUF102",
    "RUF2",
    "RUF20",
    "RUF200",
    "S",
    "S1",
    "S10",
    "S101",
    "S102",
    "S103",
    "S104",
    "S105",
    "S106",
    "S107",
    "S108",
    "S11",
    "S110",
    "S112",
    "S113",
    "S2",
    "S20",
    "S201",
    "S202",
    "S3",
    "S30",
    "S301",
    "S302",
    "S303",
    "S304",
    "S305",
    "S306",
    "S307",
    "S308",
    "S31",
    "S310",
    "S311",
    "S312",
    "S313",
    "S314",
    "S315",
    "S316",
    "S317",
    "S318",
    "S319",
    "S32",
    "S320",
    "S321",
    "S323",
    "S324",
    "S4",
    "S40",
    "S401",
    "S402",
    "S403",
    "S404",
    "S405",
    "S406",
    "S407",
    "S408",
    "S409",
    "S41",
    "S411",
    "S412",
    "S413",
    "S415",
    "S5",
    "S50",
    "S501",
    "S502",
    "S503",
    "S504",
    "S505",
    "S506",
    "S507",
    "S508",
    "S509",
    "S6",
    "S60",
    "S601",
    "S602",
    "S603",
    "S604",
    "S605",
    "S606",
    "S607",
    "S608",
    "S609",
    "S61",
    "S610",
    "S611",
    "S612",
    "S7",
    "S70",
    "S701",
    "S702",
    "S704",
    "SIM",
    "SIM1",
    "SIM10",
    "SIM101",
    "SIM102",
    "SIM103",
    "SIM105",
    "SIM107",
    "SIM108",
    "SIM109",
    "SIM11",
    "SIM110",
    "SIM112",
    "SIM113",
    "SIM114",
    "SIM115",
    "SIM116",
    "SIM117",
    "SIM118",
    "SIM2",
    "SIM20",
    "SIM201",
    "SIM202",
    "SIM208",
    "SIM21",
    "SIM210",
    "SIM211",
    "SIM212",
    "SIM22",
    "SIM220",
    "SIM221",
    "SIM222",
    "SIM223",
    "SIM3",
    "SIM30",
    "SIM300",
    "SIM4",
    "SIM40",
    "SIM401",
    "SIM9",
    "SIM90",
    "SIM905",
    "SIM91",
    "SIM910",
    "SIM911",
    "SLF",
    "SLF0",
    "SLF00",
    "SLF001",
    "SLOT",
    "SLOT0",
    "SLOT00",
    "SLOT000",
    "SLOT001",
    "SLOT002",
    "T",
    "T1",
    "T10",
    "T100",
    "T2",
    "T20",
    "T201",
    "T203",
    "TC",
    "TC0",
    "TC00",
    "TC001",
    "TC002",
    "TC003",
    "TC004",
    "TC005",
    "TC006",
    "TC007",
    "TC008",
    "TC01",
    "TC010",
    "TD",
    "TD0",
    "TD00",
    "TD001",
    "TD002",
    "TD003",
    "TD004",
    "TD005",
    "TD006",
    "TD007",
    "TID",
    "TID2",
    "TID25",
    "TID251",
    "TID252",
    "TID253",
    "TRY",
    "TRY0",
    "TRY00",
    "TRY002",
    "TRY003",
    "TRY004",
    "TRY2",
    "TRY20",
    "TRY201",
    "TRY203",
    "TRY3",
    "TRY30",
    "TRY300",
    "TRY301",
    "TRY4",
    "TRY40",
    "TRY400",
    "TRY401",
    "UP",
    "UP0",
    "UP00",
    "UP001",
    "UP003",
    "UP004",
    "UP005",
    "UP006",
    "UP007",
    "UP008",
    "UP009",
    "UP01",
    "UP010",
    "UP011",
    "UP012",
    "UP013",
    "UP014",
    "UP015",
    "UP017",
    "UP018",
    "UP019",
    "UP02",
    "UP020",
    "UP021",
    "UP022",
    "UP023",
    "UP024",
    "UP025",
    "UP026",
    "UP028",
    "UP029",
    "UP03",
    "UP030",
    "UP031",
    "UP032",
    "UP033",
    "UP034",
    "UP035",
    "UP036",
    "UP037",
    "UP038",
    "UP039",
    "UP04",
    "UP040",
    "UP041",
    "UP042",
    "UP043",
    "UP044",
    "UP045",
    "UP046",
    "UP047",
    "UP049",
    "W",
    "W1",
    "W19",
    "W191",
    "W2",
    "W29",
    "W291",
    "W292",
    "W293",
    "W3",
    "W39",
    "W391",
    "W5",
    "W50",
    "W505",
    "W6",
    "W60",
    "W605",
    "YTT",
    "YTT1",
    "YTT10",
    "YTT101",
    "YTT102",
    "YTT103",
    "YTT2",
    "YTT20",
    "YTT201",
    "YTT202",
    "YTT203",
    "YTT204",
    "YTT3",
    "YTT30",
    "YTT301",
    "YTT302",
    "YTT303",
]"""
Strictness = { union = [
    """enum = [
    "parents",
]""",
    """enum = [
    "all",
]""",
] }

["defs = { hidden = true }".AnalyzeOptions]
detect-string-imports = "boolean"
direction = "ref = 'defs.Direction'"
exclude = [ "string" ]
preview = "boolean"

["defs = { hidden = true }".AnalyzeOptions.include-dependencies]
"*" = [ "string" ]

["defs = { hidden = true }".ApiBan]
"msg = { required = true }" = "string"

["defs = { hidden = true }".Flake8AnnotationsOptions]
allow-star-arg-any = "boolean"
ignore-fully-untyped = "boolean"
mypy-init-return = "boolean"
suppress-dummy-args = "boolean"
suppress-none-returning = "boolean"

["defs = { hidden = true }".Flake8BanditOptions]
allowed-markup-calls = [ "string" ]
check-typed-exception = "boolean"
extend-markup-names = [ "string" ]
hardcoded-tmp-directory = [ "string" ]
hardcoded-tmp-directory-extend = [ "string" ]

["defs = { hidden = true }".Flake8BooleanTrapOptions]
extend-allowed-calls = [ "string" ]

["defs = { hidden = true }".Flake8BugbearOptions]
extend-immutable-calls = [ "string" ]

["defs = { hidden = true }".Flake8BuiltinsOptions]
allowed-modules = [ "string" ]
builtins-allowed-modules = [ "string" ]
builtins-ignorelist = [ "string" ]
builtins-strict-checking = "boolean"
ignorelist = [ "string" ]
strict-checking = "boolean"

["defs = { hidden = true }".Flake8ComprehensionsOptions]
allow-dict-calls-with-keyword-arguments = "boolean"

["defs = { hidden = true }".Flake8CopyrightOptions]
author = "string"
min-file-size = "integer = { min = 0 }"
notice-rgx = "string"

["defs = { hidden = true }".Flake8ErrMsgOptions]
max-string-length = "integer = { min = 0 }"

["defs = { hidden = true }".Flake8GetTextOptions]
extend-function-names = [ "string" ]
function-names = [ "string" ]

["defs = { hidden = true }".Flake8ImplicitStrConcatOptions]
allow-multiline = "boolean"

["defs = { hidden = true }".Flake8ImportConventionsOptions]
banned-from = [ "string", "unique-items = true" ]

["defs = { hidden = true }".Flake8ImportConventionsOptions.aliases]
"*" = "ref = 'defs.Alias'"

["defs = { hidden = true }".Flake8ImportConventionsOptions.banned-aliases]
"*" = "ref = 'defs.BannedAliases'"

["defs = { hidden = true }".Flake8ImportConventionsOptions.extend-aliases]
"*" = "ref = 'defs.Alias'"

["defs = { hidden = true }".Flake8PytestStyleOptions]
fixture-parentheses = "boolean"
mark-parentheses = "boolean"
parametrize-names-type = "ref = 'defs.ParametrizeNameType'"
parametrize-values-row-type = "ref = 'defs.ParametrizeValuesRowType'"
parametrize-values-type = "ref = 'defs.ParametrizeValuesType'"
raises-extend-require-match-for = [ "string" ]
raises-require-match-for = [ "string" ]
warns-extend-require-match-for = [ "string" ]
warns-require-match-for = [ "string" ]

["defs = { hidden = true }".Flake8QuotesOptions]
avoid-escape = "boolean"
docstring-quotes = "ref = 'defs.Quote'"
inline-quotes = "ref = 'defs.Quote'"
multiline-quotes = "ref = 'defs.Quote'"

["defs = { hidden = true }".Flake8SelfOptions]
extend-ignore-names = [ "string" ]
ignore-names = [ "string" ]

["defs = { hidden = true }".Flake8TidyImportsOptions]
ban-relative-imports = "ref = 'defs.Strictness'"
banned-module-level-imports = [ "string" ]

["defs = { hidden = true }".Flake8TidyImportsOptions.banned-api]
"*" = "ref = 'defs.ApiBan'"

["defs = { hidden = true }".Flake8TypeCheckingOptions]
exempt-modules = [ "string" ]
quote-annotations = "boolean"
runtime-evaluated-base-classes = [ "string" ]
runtime-evaluated-decorators = [ "string" ]
strict = "boolean"

["defs = { hidden = true }".Flake8UnusedArgumentsOptions]
ignore-variadic-names = "boolean"

["defs = { hidden = true }".FormatOptions]
docstring-code-format = "boolean"
docstring-code-line-length = "ref = 'defs.DocstringCodeLineWidth'"
exclude = [ "string" ]
indent-style = "ref = 'defs.IndentStyle'"
line-ending = "ref = 'defs.LineEnding'"
preview = "boolean"
quote-style = "ref = 'defs.QuoteStyle'"
skip-magic-trailing-comma = "boolean"

["defs = { hidden = true }".IsortOptions]
case-sensitive = "boolean"
classes = [ "string" ]
combine-as-imports = "boolean"
constants = [ "string" ]
default-section = "ref = 'defs.ImportSection'"
detect-same-package = "boolean"
extra-standard-library = [ "string" ]
force-single-line = "boolean"
force-sort-within-sections = "boolean"
force-to-top = [ "string" ]
force-wrap-aliases = "boolean"
forced-separate = [ "string" ]
from-first = "boolean"
known-first-party = [ "string" ]
known-local-folder = [ "string" ]
known-third-party = [ "string" ]
length-sort = "boolean"
length-sort-straight = "boolean"
lines-after-imports = "integer"
lines-between-types = "integer = { min = 0 }"
no-lines-before = [ "ref = 'defs.ImportSection'" ]
no-sections = "boolean"
order-by-type = "boolean"
relative-imports-order = "ref = 'defs.RelativeImportsOrder'"
required-imports = [ "ref = 'defs.NameImports'" ]
section-order = [ "ref = 'defs.ImportSection'" ]
single-line-exclusions = [ "string" ]
split-on-trailing-comma = "boolean"
variables = [ "string" ]

["defs = { hidden = true }".IsortOptions.sections]
"*" = [ "string" ]

["defs = { hidden = true }".LintOptions]
allowed-confusables = [ "string = { min-len = 1, max-len = 1 }" ]
dummy-variable-rgx = "string"
exclude = [ "string" ]
explicit-preview-rules = "boolean"
extend-fixable = [ "ref = 'defs.RuleSelector'" ]
extend-ignore = [ "ref = 'defs.RuleSelector'" ]
extend-safe-fixes = [ "ref = 'defs.RuleSelector'" ]
extend-select = [ "ref = 'defs.RuleSelector'" ]
extend-unfixable = [ "ref = 'defs.RuleSelector'" ]
extend-unsafe-fixes = [ "ref = 'defs.RuleSelector'" ]
external = [ "string" ]
fixable = [ "ref = 'defs.RuleSelector'" ]
flake8-annotations = "ref = 'defs.Flake8AnnotationsOptions'"
flake8-bandit = "ref = 'defs.Flake8BanditOptions'"
flake8-boolean-trap = "ref = 'defs.Flake8BooleanTrapOptions'"
flake8-bugbear = "ref = 'defs.Flake8BugbearOptions'"
flake8-builtins = "ref = 'defs.Flake8BuiltinsOptions'"
flake8-comprehensions = "ref = 'defs.Flake8ComprehensionsOptions'"
flake8-copyright = "ref = 'defs.Flake8CopyrightOptions'"
flake8-errmsg = "ref = 'defs.Flake8ErrMsgOptions'"
flake8-gettext = "ref = 'defs.Flake8GetTextOptions'"
flake8-implicit-str-concat = "ref = 'defs.Flake8ImplicitStrConcatOptions'"
flake8-import-conventions = "ref = 'defs.Flake8ImportConventionsOptions'"
flake8-pytest-style = "ref = 'defs.Flake8PytestStyleOptions'"
flake8-quotes = "ref = 'defs.Flake8QuotesOptions'"
flake8-self = "ref = 'defs.Flake8SelfOptions'"
flake8-tidy-imports = "ref = 'defs.Flake8TidyImportsOptions'"
flake8-type-checking = "ref = 'defs.Flake8TypeCheckingOptions'"
flake8-unused-arguments = "ref = 'defs.Flake8UnusedArgumentsOptions'"
ignore = [ "ref = 'defs.RuleSelector'" ]
ignore-init-module-imports = "boolean"
isort = "ref = 'defs.IsortOptions'"
logger-objects = [ "string" ]
mccabe = "ref = 'defs.McCabeOptions'"
pep8-naming = "ref = 'defs.Pep8NamingOptions'"
preview = "boolean"
pycodestyle = "ref = 'defs.PycodestyleOptions'"
pydoclint = "ref = 'defs.PydoclintOptions'"
pydocstyle = "ref = 'defs.PydocstyleOptions'"
pyflakes = "ref = 'defs.PyflakesOptions'"
pylint = "ref = 'defs.PylintOptions'"
pyupgrade = "ref = 'defs.PyUpgradeOptions'"
ruff = "ref = 'defs.RuffOptions'"
select = [ "ref = 'defs.RuleSelector'" ]
task-tags = [ "string" ]
typing-modules = [ "string" ]
unfixable = [ "ref = 'defs.RuleSelector'" ]

["defs = { hidden = true }".LintOptions.extend-per-file-ignores]
"*" = [ "ref = 'defs.RuleSelector'" ]

["defs = { hidden = true }".LintOptions.per-file-ignores]
"*" = [ "ref = 'defs.RuleSelector'" ]

["defs = { hidden = true }".McCabeOptions]
max-complexity = "integer = { min = 0 }"

["defs = { hidden = true }".Pep8NamingOptions]
classmethod-decorators = [ "string" ]
extend-ignore-names = [ "string" ]
ignore-names = [ "string" ]
staticmethod-decorators = [ "string" ]

["defs = { hidden = true }".PyUpgradeOptions]
keep-runtime-typing = "boolean"

["defs = { hidden = true }".PycodestyleOptions]
ignore-overlong-task-comments = "boolean"
max-doc-length = "ref = 'defs.LineLength'"
max-line-length = "ref = 'defs.LineLength'"

["defs = { hidden = true }".PydoclintOptions]
ignore-one-line-docstrings = "boolean"

["defs = { hidden = true }".PydocstyleOptions]
convention = "ref = 'defs.Convention'"
ignore-decorators = [ "string" ]
ignore-var-parameters = "boolean"
property-decorators = [ "string" ]

["defs = { hidden = true }".PyflakesOptions]
allowed-unused-imports = [ "string" ]
extend-generics = [ "string" ]

["defs = { hidden = true }".PylintOptions]
allow-dunder-method-names = [ "string", "unique-items = true" ]
allow-magic-value-types = [ "ref = 'defs.ConstantType'" ]
max-args = "integer = { min = 0 }"
max-bool-expr = "integer = { min = 0 }"
max-branches = "integer = { min = 0 }"
max-locals = "integer = { min = 0 }"
max-nested-blocks = "integer = { min = 0 }"
max-positional-args = "integer = { min = 0 }"
max-public-methods = "integer = { min = 0 }"
max-returns = "integer = { min = 0 }"
max-statements = "integer = { min = 0 }"

["defs = { hidden = true }".RuffOptions]
allowed-markup-calls = [ "string" ]
extend-markup-names = [ "string" ]
parenthesize-tuple-in-subscript = "boolean"
