archs = { union = [
    "string",
    [ "string" ],
] }
before-all = { union = [
    "string",
    [ "string" ],
] }
before-build = { union = [
    "string",
    [ "string" ],
] }
before-test = { union = [
    "string",
    [ "string" ],
] }
build = { union = [
    "string",
    [ "string" ],
] }
build-frontend = { union = [
    """enum = [
    "pip",
    "build",
    "build[uv]",
    "default",
]""",
    """
    pattern = '^pip; ?args:'
""",
    """
    pattern = '^build; ?args:'
""",
    """
    pattern = '^build\\[uv\\]; ?args:'
""",
    { "name = { required = true }" = """enum = [
    "pip",
    "build",
    "build[uv]",
]""", args = [ "string" ] },
] }
build-verbosity = "integer = { min = -3, max = 3 }"
config-settings = { union = [
    "string",
    { "pattern = '.+'" = { union = [
    "string",
    [ "string" ],
] } },
] }
container-engine = { union = [
    """enum = [
    "docker",
    "podman",
]""",
    """
    pattern = '^docker; ?(create_args|disable_host_mount):'
""",
    """
    pattern = '^podman; ?(create_args|disable_host_mount):'
""",
    { "name = { required = true }" = """enum = [
    "docker",
    "podman",
]""", create-args = [ "string" ], disable-host-mount = "boolean" },
] }
dependency-versions = "string"
enable = { union = [
    "ref = 'defs.enable'",
    [ "ref = 'defs.enable'" ],
] }
environment = { union = [
    "string",
    { "pattern = '.+'" = "string" },
] }
environment-pass = { union = [
    "string",
    [ "string" ],
] }
free-threaded-support = "boolean"
manylinux-aarch64-image = "string"
manylinux-armv7l-image = "string"
manylinux-i686-image = "string"
manylinux-ppc64le-image = "string"
manylinux-pypy_aarch64-image = "string"
manylinux-pypy_i686-image = "string"
manylinux-pypy_x86_64-image = "string"
manylinux-s390x-image = "string"
manylinux-x86_64-image = "string"
musllinux-aarch64-image = "string"
musllinux-armv7l-image = "string"
musllinux-i686-image = "string"
musllinux-ppc64le-image = "string"
musllinux-s390x-image = "string"
musllinux-x86_64-image = "string"
repair-wheel-command = { union = [
    "string",
    [ "string" ],
] }
skip = { union = [
    "string",
    [ "string" ],
] }
test-command = { union = [
    "string",
    [ "string" ],
] }
test-extras = { union = [
    "string",
    [ "string" ],
] }
test-groups = { union = [
    "string",
    [ "string" ],
] }
test-requires = { union = [
    "string",
    [ "string" ],
] }
test-skip = { union = [
    "string",
    [ "string" ],
] }
overrides = [ { "select = { required = true }" = { union = [
    "string",
    [ "string" ],
] }, before-all = "ref = 'before-all'", before-build = "ref = 'before-build'", before-test = "ref = 'before-test'", build-frontend = "ref = 'build-frontend'", build-verbosity = "ref = 'build-verbosity'", config-settings = "ref = 'config-settings'", container-engine = "ref = 'container-engine'", dependency-versions = "ref = 'dependency-versions'", environment = "ref = 'environment'", environment-pass = "ref = 'environment-pass'", manylinux-aarch64-image = "ref = 'manylinux-aarch64-image'", manylinux-armv7l-image = "ref = 'manylinux-armv7l-image'", manylinux-i686-image = "ref = 'manylinux-i686-image'", manylinux-ppc64le-image = "ref = 'manylinux-ppc64le-image'", manylinux-pypy_aarch64-image = "ref = 'manylinux-pypy_aarch64-image'", manylinux-pypy_i686-image = "ref = 'manylinux-pypy_i686-image'", manylinux-pypy_x86_64-image = "ref = 'manylinux-pypy_x86_64-image'", manylinux-s390x-image = "ref = 'manylinux-s390x-image'", manylinux-x86_64-image = "ref = 'manylinux-x86_64-image'", musllinux-aarch64-image = "ref = 'musllinux-aarch64-image'", musllinux-armv7l-image = "ref = 'musllinux-armv7l-image'", musllinux-i686-image = "ref = 'musllinux-i686-image'", musllinux-ppc64le-image = "ref = 'musllinux-ppc64le-image'", musllinux-s390x-image = "ref = 'musllinux-s390x-image'", musllinux-x86_64-image = "ref = 'musllinux-x86_64-image'", repair-wheel-command = "ref = 'repair-wheel-command'", test-command = "ref = 'test-command'", test-extras = "ref = 'test-extras'", test-groups = "ref = 'test-groups'", test-requires = "ref = 'test-requires'", inherit = { before-all = "ref = 'defs.inherit'", before-build = "ref = 'defs.inherit'", before-test = "ref = 'defs.inherit'", config-settings = "ref = 'defs.inherit'", container-engine = "ref = 'defs.inherit'", environment = "ref = 'defs.inherit'", environment-pass = "ref = 'defs.inherit'", repair-wheel-command = "ref = 'defs.inherit'", test-command = "ref = 'defs.inherit'", test-extras = "ref = 'defs.inherit'", test-requires = "ref = 'defs.inherit'" } } ]

[linux]
archs = "ref = 'archs'"
before-all = "ref = 'before-all'"
before-build = "ref = 'before-build'"
before-test = "ref = 'before-test'"
build-frontend = "ref = 'build-frontend'"
build-verbosity = "ref = 'build-verbosity'"
config-settings = "ref = 'config-settings'"
container-engine = "ref = 'container-engine'"
environment = "ref = 'environment'"
environment-pass = "ref = 'environment-pass'"
manylinux-aarch64-image = "ref = 'manylinux-aarch64-image'"
manylinux-armv7l-image = "ref = 'manylinux-armv7l-image'"
manylinux-i686-image = "ref = 'manylinux-i686-image'"
manylinux-ppc64le-image = "ref = 'manylinux-ppc64le-image'"
manylinux-pypy_aarch64-image = "ref = 'manylinux-pypy_aarch64-image'"
manylinux-pypy_i686-image = "ref = 'manylinux-pypy_i686-image'"
manylinux-pypy_x86_64-image = "ref = 'manylinux-pypy_x86_64-image'"
manylinux-s390x-image = "ref = 'manylinux-s390x-image'"
manylinux-x86_64-image = "ref = 'manylinux-x86_64-image'"
musllinux-aarch64-image = "ref = 'musllinux-aarch64-image'"
musllinux-armv7l-image = "ref = 'musllinux-armv7l-image'"
musllinux-i686-image = "ref = 'musllinux-i686-image'"
musllinux-ppc64le-image = "ref = 'musllinux-ppc64le-image'"
musllinux-s390x-image = "ref = 'musllinux-s390x-image'"
musllinux-x86_64-image = "ref = 'musllinux-x86_64-image'"
repair-wheel-command = { union = [
    "string",
    [ "string" ],
] }
test-command = "ref = 'test-command'"
test-extras = "ref = 'test-extras'"
test-groups = "ref = 'test-groups'"
test-requires = "ref = 'test-requires'"

[windows]
archs = "ref = 'archs'"
before-all = "ref = 'before-all'"
before-build = "ref = 'before-build'"
before-test = "ref = 'before-test'"
build-frontend = "ref = 'build-frontend'"
build-verbosity = "ref = 'build-verbosity'"
config-settings = "ref = 'config-settings'"
dependency-versions = "ref = 'dependency-versions'"
environment = "ref = 'environment'"
repair-wheel-command = "ref = 'repair-wheel-command'"
test-command = "ref = 'test-command'"
test-extras = "ref = 'test-extras'"
test-groups = "ref = 'test-groups'"
test-requires = "ref = 'test-requires'"

[macos]
archs = "ref = 'archs'"
before-all = "ref = 'before-all'"
before-build = "ref = 'before-build'"
before-test = "ref = 'before-test'"
build-frontend = "ref = 'build-frontend'"
build-verbosity = "ref = 'build-verbosity'"
config-settings = "ref = 'config-settings'"
dependency-versions = "ref = 'dependency-versions'"
environment = "ref = 'environment'"
repair-wheel-command = { union = [
    "string",
    [ "string" ],
] }
test-command = "ref = 'test-command'"
test-extras = "ref = 'test-extras'"
test-groups = "ref = 'test-groups'"
test-requires = "ref = 'test-requires'"

[pyodide]
archs = "ref = 'archs'"
before-all = "ref = 'before-all'"
before-build = "ref = 'before-build'"
before-test = "ref = 'before-test'"
build-frontend = "ref = 'build-frontend'"
build-verbosity = "ref = 'build-verbosity'"
config-settings = "ref = 'config-settings'"
dependency-versions = "ref = 'dependency-versions'"
environment = "ref = 'environment'"
repair-wheel-command = "ref = 'repair-wheel-command'"
test-command = "ref = 'test-command'"
test-extras = "ref = 'test-extras'"
test-groups = "ref = 'test-groups'"
test-requires = "ref = 'test-requires'"

["defs = { hidden = true }"]
inherit = """enum = [
    "none",
    "prepend",
    "append",
]"""
enable = """enum = [
    "cpython-freethreading",
    "cpython-prerelease",
    "pypy",
]"""
