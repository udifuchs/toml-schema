[build-system]
"requires = { required = true }" = [ "string" ]
build-backend = "string"
backend-path = [ "string" ]

[project]
"name = { required = true }" = """
    pattern = '^([a-zA-Z\\d]|[a-zA-Z\\d][\\w.-]*[a-zA-Z\\d])$'
"""
version = """
    pattern = '^v?((([0-9]+)!)?([0-9]+(\\.[0-9]+)*)([-_\\.]?(alpha|a|beta|b|preview|pre|c|rc)[-_\\.]?([0-9]+)?)?((-([0-9]+))|([-_\\.]?(post|rev|r)[-_\\.]?([0-9]+)?))?([-_\\.]?(dev)[-_\\.]?([0-9]+)?)?)(\\+([a-z0-9]+([-_\\.][a-z0-9]+)*))?$'
"""
authors = [ [
    "union",
    { "name = { required = true }" = "string", email = "string" },
    { name = "string", "email = { required = true }" = "string" },
] ]
classifiers = [ "string" ]
dependencies = [ "string" ]
description = "string"
dynamic = [ """enum = [
    "version",
    "description",
    "readme",
    "requires-python",
    "license",
    "license-files",
    "authors",
    "maintainers",
    "keywords",
    "classifiers",
    "urls",
    "scripts",
    "gui-scripts",
    "entry-points",
    "dependencies",
    "optional-dependencies",
]""" ]
keywords = [ "string" ]
license = [
    "union",
    "string",
    { "file = { required = true }" = "string" },
    { "text = { required = true }" = "string" },
]
license-files = [ "string" ]
maintainers = [ [
    "union",
    { "name = { required = true }" = "string", email = "string" },
    { name = "string", "email = { required = true }" = "string" },
] ]

readme = [
    "union",
    "string",
    { "file = { required = true }" = "string", content-type = "string" },
    { "text = { required = true }" = "string", content-type = "string" },
    { "content-type = { required = true }" = "string" },
]
requires-python = "string"
urls = { "*" = "string" }

[project.optional-dependencies]
"pattern = '^([a-z\\d]|[a-z\\d]([a-z\\d-](?!--))*[a-z\\d])$'" = [ "string" ]

[project.scripts]
"*" = "string"

[project.gui-scripts]
"*" = "string"

[project.entry-points."pattern = '^\\w+(\\.\\w+)*$'"]
"*" = "string"

[dependency-groups]
"pattern = '^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$'" = [ [
    "union",
    "string",
    { "include-group = { required = true }" = "string" },
] ]

[tool."*"]
"*" = "any-value"
